{"version":3,"sources":["components/LoadingComponent.js","shared/baseURL.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/RenderLeader.js","components/AboutComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/feedback.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderDish","dish","in","transformProps","exitTransform","width","src","image","alt","name","description","RenderComments","comments","postComment","dishId","map","comment","key","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","props","state","isModalOpen","toggleModal","bind","handleSubmitComment","this","setState","values","console","log","JSON","stringify","rating","outline","onClick","color","isOpen","toggle","onSubmit","htmlFor","select","model","text","validators","minLength","maxLength","show","messages","textarea","rows","type","Component","len","val","length","DishDetail","isLoading","errMess","to","active","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","Menu","menu","dishes","required","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","md","placeholder","size","offset","checkbox","RenderLeader","left","middle","object","body","heading","About","leaders","title","list","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","addFeedback","feedback","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","Feedback","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.524d2046.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n}","export const baseUrl = 'http://localhost:3001/';","import React, {Component} from 'react';\nimport {Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem,\n        Modal, ModalHeader, ModalBody, Button, Row, Label} from 'reactstrap'\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm, Errors} from 'react-redux-form';       \nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseURL';   \nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderDish({dish}) {\n    if(dish!=null)\n        return(  \n            <div className=\"col-12 col-md-5 m-1\">\n                <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translatY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                        <CardBody>\n                            <CardTitle>\n                                {dish.name}\n                            </CardTitle>\n                            <CardText>\n                                {dish.description}\n                            </CardText>\n                        </CardBody>\n                    </Card> \n                </FadeTransform>\n            </div>                                \n        );\n    else\n        return(\n            <div></div>                                              \n        );            \n}\n\n\nfunction RenderComments({comments, postComment, dishId}) {\n    if(comments!=null)\n        return(\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    <Stagger in>\n\n                        {comments.map((comment) => {\n                            return(\n                                <Fade in>\n                                    <li key={comment.id}>\n                                        <p> {comment.comment} </p>\n                                        <p>-- {comment.author} , {Intl.DateTimeFormat('en-US', {year:'numeric', month:'short',day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>                                                          \n                                    </li>\n                                </Fade>                            \n                            );   \n                        })}            \n                    </Stagger>                                                                   \n                </ul>            \n                <CommentForm dishId={dishId} postComment={postComment}/>                                   \n            </div>                \n        );\n    else\n        return(\n            <div></div>\n        );\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {            \n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        });         \n    }\n\n    handleSubmitComment(values) {\n        console.log(\"Current state is: \"+ JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    render() {\n        return(         \n            <div>\n                <Button outline onClick={this.toggleModal} color=\"secondary\">\n                    <span className=\"fa fa-pencil fa-lg\" ></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\n                            <Row className=\"form-group m-3\">                                                                        \n                                <Label htmlFor=\"rating\">Rating</Label>                                                                                                              \n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>                                            \n                                </Control.select>\n                                \n                            </Row>\n                            <Row className=\"from-group m-3\">\n                                <Label htmlFor=\"author\">Your Name</Label>                                    \n                                    <Control.text model=\".author\" name=\"author\" className=\"form-control\"\n                                    validators={{\n                                        minLength: minLength(3), maxLength: maxLength(15)\n                                    }}/> \n                                    <Errors\n                                    className=\"text-danger\" model=\".name\" \n                                    show=\"touched\" \n                                    messages={{                                            \n                                        minLength: 'Must be greater than 2 character',\n                                        maxLength: 'Must be less than 15 characters'\n                                    }} />                                                                                                                    \n                            </Row>\n                            <Row className=\"form-group m-3\">\n                                <Label htmlFor=\"comment\">Comment</Label>                                    \n                                    <Control.textarea model=\".comment\" name=\"comment\" className=\"form-control\"\n                                        rows=\"6\">                                            \n                                    </Control.textarea>                                    \n                            </Row>\n                            <Button className=\"ml-3\" type=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>                 \n            </div>                           \n        );\n    }    \n}\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nconst DishDetail = (props) => {\n    if(props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{ props.errMess }</h4>\n                </div>\n            </div>\n        );\n    }\n\n    else if(props.dish!=null){\n        return(\n            <div>                \n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\"> Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active> {props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr/>\n                        </div>\n                    </div>                \n                    <div className=\"row\">\n                        <RenderDish dish={props.dish}/>  \n                                                            \n                        <RenderComments comments={props.comments}\n                                        dishId={props.dish.id} postComment={props.postComment} />                                                                                                            \n                    </div>                    \n                </div>  \n            </div>            \n        );\n    }\n    else\n        return(\n            <div></div>\n        );        \n                                 \n}\n\n\nexport default DishDetail;","import React, {Component} from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, Nav, Collapse, NavItem, NavbarToggler,\n        Button, Modal, ModalHeader, ModalBody, Label,Form, FormGroup, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen : true,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen : !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        });        \n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"username:\"+ this.username.value +\"password:\" + this.password.value +\"remember:\" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar dark expand=\"md\" >\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand href=\"/\" className=\"mr-auto\">\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante con Fusion\"/>\n                        </NavbarBrand>                \n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>                                                                        \n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>                                \n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}/>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input}/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>       \n                            <Button type=\"submit\" color=\"primary\" value=\"submit\">Login</Button>                     \n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react'\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText } from 'reactstrap'\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseURL';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if(isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if(errMess) {\n        return(\n            <h4> {errMess} </h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translatY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\n                    <CardBody>\n                        <CardTitle>\n                            {item.name}\n                        </CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\n                        <CardText>\n                            {item.description}\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                                isLoading={props.dishesLoading} \n                                errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.promotion}\n                            isLoading={props.promosLoading} \n                            errMess={props.promosErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.leader}\n                isLoading={props.leadersLoading} \n                errMess={props.leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react'\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseURL';\n\nfunction RenderMenuItem({dish, onClick}){\n    return(\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                <CardImgOverlay>\n                    <CardTitle>\n                        {dish.name}\n                    </CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>    \n    );\n}\n\nconst Menu = (props) =>{\n    const menu = props.dishes.dishes.map( (dish) => {\n        return(\n            <div className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} onClick={props.onClick} /> \n            </div>\n        );\n    });\n\n    if(props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{ props.dishes.errMess }</h4>\n                </div>\n            </div>\n        );\n    }\n    else\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\"> Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active> Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                {menu}\n                </div>              \n            </div>\n        );\n} \n        \n        \n\nexport default Menu;","import React,{ Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem, Label, Col, Button, Row} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors} from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) =>/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \"+ JSON.stringify(values));        \n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, \n            values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\"> Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active> Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>            \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us Your Feedback</h3>                                      \n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}/> \n                                        <Errors\n                                        className=\"text-danger\" model=\".firstname\" \n                                        show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 character',\n                                            maxLength: 'Must be less than 15 characters'\n                                        }} />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }} />\n                                        <Errors\n                                        className=\"text-danger\" model=\".lastname\" \n                                        show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 character',\n                                            maxLength: 'Must be less than 15 characters'\n                                        }} /> \n                                </Col>\n                            </Row>   \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}/>\n                                        <Errors\n                                        className=\"text-danger\" model=\".telnum\" \n                                        show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be less than 15 numbers',\n                                            isNumber: 'Must be a number'\n                                        }} />\n                                </Col>\n                            </Row>  \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}/>\n                                        <Errors\n                                        className=\"text-danger\" model=\".email\" \n                                        show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email address'\n                                        }} /> \n                                </Col>\n                            </Row>    \n                            <Row className=\"form-group\">\n                                <Col md={{size:6, offset:2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" id=\"agree\" name=\"agree\"\n                                                className=\"form-check-input\"/>{' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size:3, offset:1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" \n                                    className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                    className=\"form-control\"/> \n                                </Col>\n                            </Row>  \n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset:2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>                                                                                          \n                        </Form>\n                    </div>\n                </div>\n            </div>        \n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport {Media} from  'reactstrap';\nimport { baseUrl } from '../shared/baseURL';\nimport { Fade } from 'react-animation-components';\n\nfunction RenderLeader({leader}) {\n    return(        \n        <Fade in>\n            <Media className=\"mb-4\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt=\"Leader\"/>\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Media heading>{leader.name}</Media>\n                    <p>{leader.designation}</p>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>            \n        </Fade>        \n    );\n}\n\nexport default RenderLeader;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport RenderLeader from './RenderLeader';\nimport { FadeTransform, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <Stagger in>\n                <RenderLeader leader={leader}/>            \n            </Stagger>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <FadeTransform in\n                    transformProps={{\n                        exitTransform: 'scale(0.5) translatY(-50%)'\n                    }}>\n                            <Media list>\n                                {leaders}\n                            </Media>\n                    </FadeTransform>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\" >Home</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/aboutus\">About</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>        \n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseURL';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newComment) ,\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error :' + response.status + ':' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n                })\n            .then(response => response.json())\n            .then(dishes => dispatch(addDishes(dishes)))\n            .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + 'comments')\n            .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    var error = new Error(\"Failed : \"+ response.status + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            }, \n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(comments => dispatch(addComments(comments)))\n            .catch(error => dispatch(commentsFailed(error.message)));            \n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n            .then(response => {\n                if(response.ok){\n                    return response;\n                }\n                else {\n                    var error = new Error(\"Failed : \"+ response.status + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            }, \n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(promos => dispatch(addPromos(promos)))\n            .catch(error => dispatch(promosFailed(error.message)));\n            \n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error :' + response.status + ':' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n                })\n            .then(response => response.json())\n            .then(leaders => dispatch(addLeaders(leaders)))\n            .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname, \n        telnum: telnum, \n        email: email, \n        agree: agree, \n        contactType: contactType, \n        message: message\n    };\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newFeedback) ,\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response =>  dispatch(addFeedback(response)))\n    .then(response => { alert(\"Thank you for your feedback!\\n\" + response) })\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n}\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\n","import React, { Component } from 'react';\nimport DishDetail from './DishdetailComponent'\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent'\nimport About from './AboutComponent';\nimport Footer from './FooterComponent';\nimport '../App.css';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return{\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n}\n\nconst mapDispathToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)), \n  fetchDishes: () => {dispatch(fetchDishes())},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))}\n});\n\nclass Main extends Component{\n\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n  \n\n  onDishSelect(dishId){\n      this.setState({selectedDish : dishId});\n  }\n\n  render(){\n\n    const HomePage =() => {\n      return(\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              dishesLoading={this.props.dishes.isLoading}\n              dishesErrMess={this.props.dishes.errMess}\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promosLoading={this.props.promotions.isLoading}\n              promosErrMess={this.props.promotions.errMess}              \n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n              leadersLoading={this.props.leaders.isLoading}\n              leadersErrMess={this.props.leaders.errMess} />\n      );\n    }\n\n    const dishWithId =({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment} />\n      );\n    }\n\n    return (\n      <div>  \n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\n            <Switch>\n            <Route path=\"/home\" component={HomePage}/>\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}/>\n            <Route path=\"/menu/:dishId\" component={dishWithId}/>\n            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>}/>\n            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \n                   postFeedback={this.props.postFeedback} />}/>\n            <Redirect to=\"/home\"/>\n          </Switch>\n          </CSSTransition>\n        </TransitionGroup>        \n        <Footer />\n      </div>\n      \n    );    \n  }\n  \n}\n\nexport default withRouter(connect(mapStateToProps, mapDispathToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { \n    errMess: null, \n    comments: []\n    }, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errmess: null, comments: action.payload};\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errmess: action.payload, comments: []};\n    \n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;            \n            console.log(\"comment: \", comment);\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n    }, action) => {\n    switch(action.type){       \n            case ActionTypes.ADD_PROMOS:\n                return {...state, isLoading: false, errmess: null, promotions: action.payload};\n    \n            case ActionTypes.PROMOS_LOADING:\n                return {...state, isLoading: true, errmess: null, promotions: []};\n    \n            case ActionTypes.PROMOS_FAILED:\n                return {...state, isLoading: false, errmess: action.payload, promotions: []};\n    \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errmess: null,\n    leaders: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errmess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errmess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errmess: action.payload, leaders: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Feedback = (state = {\n    isLoading: true,\n    errmess: null,\n    feedback: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_FEEDBACK:\n            console.log('done');\n            alert(\"done\");\n            return {...state, isLoading: false, errMess: null, feedback: action.payload};\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './redux/configureStore';\n\nconst store = configureStore();\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>      \n        </BrowserRouter>  \n      </Provider>          \n    );    \n  }\n  \n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { createForms } from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Promotions} from './promotions';\nimport {Leaders} from './leaders';\nimport {Feedback} from './feedback';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const configureStore = () => {\n    const store = createStore(\n        combineReducers({            \n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            feedback: Feedback,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}